name: Build and Deploy CRM-Frontend with Docker

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/crm-frontend:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/crm-frontend:latest

  deploy:
    name: Deploy Application
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH Key for EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > /tmp/id_rsa
          chmod 600 /tmp/id_rsa

      - name: SSH into EC2 and Deploy Docker Container
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/id_rsa ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            sudo yum update -y
            sudo amazon-linux-extras install docker -y
            sudo service docker start
            sudo usermod -aG docker ec2-user
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/crm-frontend:latest
            sudo docker run -d -p 80:80 --name crm-frontend ${{ secrets.DOCKER_USERNAME }}/crm-frontend:latest
            sudo docker ps -a -q --filter "status=exited" | xargs sudo docker rm
            sudo docker images -q --filter "dangling=true" | xargs sudo docker rmi
          EOF
        env:
          EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
